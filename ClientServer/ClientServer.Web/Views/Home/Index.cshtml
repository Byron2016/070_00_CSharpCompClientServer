@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Ajax - jquery - Fetch ejamples</h1>
</div>

<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">Example 1</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false">Example 2</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="messages-tab" data-bs-toggle="tab" data-bs-target="#messages" type="button" role="tab" aria-controls="messages" aria-selected="false">Example 3</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">Example 4</button>
    </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div class="tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">

        <div id="Ejemplo1">
            <h1 class="display-6">Example 1: JQUERY/AJAX/FETCH - POST</h1>

            <form>
                <div class="mb-3">
                    <label for="txtDuplicador" class="form-label">Value to duplicate</label>
                    <input type="text" class="form-control" id="txtDuplicador" aria-describedby="valorDuplicarHelp" value="2">
                    <div id="valorDuplicarHelp" class="form-text">Enter the value to duplicate.</div>
                </div>

                <div class="mb-3">
                    <label class="form-label">Duplicated value:</label>
                    <div class="col-auto">
                        <span id="spanDuplicado" class="form-text">
                        </span>
                    </div>
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-primary" id="btnDuplicarJ">Double-JQUERY</button>
                    <button type="button" class="btn btn-success" id="btnDuplicarA">Double-AJAX</button>
                    <button type="button" class="btn btn-warning" id="btnDuplicarF">Double-FETCH</button>
                </div>
            </form>
        </div>

    </div>
    <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab">

        <div id="Ejemplo2">
            <h1 class="display-6">Example 2: JQUERY/AJAX/FETCH - POST (sending an object)</h1>
            <form>
                <div class="mb-3">
                    <label for="txtNombre" class="form-label">Name</label>
                    <input type="text" class="form-control" id="txtNombre" aria-describedby="nombreHelp" value="nombre1">
                    <div id="nombreHelp" class="form-text">Enter your name.</div>
                </div>
                <div class="mb-3">
                    <label for="txtEdad" class="form-label">Age</label>
                    <input type="number" class="form-control" id="txtEdad" aria-describedby="edadHelp" value="56">
                    <div id="edadHelp" class="form-text">Enter your age.</div>
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-primary" id="btnCrearPersonaJ">Create-JQUERY</button>
                    <button type="button" class="btn btn-success" id="btnCrearPersonaA">Create-AJAX</button>
                    <button type="button" class="btn btn-warning" id="btnCrearPersonaF">Create-FETCH</button>
                </div>
            </form>
        </div>

    </div>
    <div class="tab-pane" id="messages" role="tabpanel" aria-labelledby="messages-tab">

        <div id="Ejemplo3">
            <h1 class="display-6">Example 3: JQUERY/AJAX/FETCH - GET (load a section of the page asynchronously)</h1>

            <form>
                <div class="mb-3">
                    <button type="button" class="btn btn-primary" id="btnCargarJ">Create-JQUERY</button>
                    <button type="button" class="btn btn-success" id="btnCargarA">Create-AJAX</button>
                    <button type="button" class="btn btn-primary" id="btnCargarF">Create-FETCH</button>
                    <button type="button" class="btn btn-warning" id="btnLimpiar">Clean</button>
                </div>
            </form>
            <div id="divGet"> </div>
        </div>

    </div>

    <div class="tab-pane" id="settings" role="tabpanel" aria-labelledby="settings-tab">

        <div id="Ejemplo4">
            <h1 class="display-6">Example 4: AJAX, envío de parámetros primitivos y complejos.</h1>

            <form>
                <div class="mb-3">
                    <label for="txtNombre4" class="form-label">Nombre</label>
                    <input type="text" class="form-control" id="txtNombre4" aria-describedby="nombreHelp4" value="nomb">
                    <div id="nombreHelp4" class="form-text">Ingresar el nombre.</div>
                </div>
                <div class="mb-3">
                    <label for="txtEdad4" class="form-label">Edad</label>
                    <input type="number" class="form-control" id="txtEdad4" aria-describedby="edadHelp4" value="25">
                    <div id="edadHelp4" class="form-text">Ingresar la edad.</div>
                </div>
                <div class="mb-3">
                    <label for="txtDuplicador4" class="form-label">Valor a duplicar</label>
                    <input type="text" class="form-control" id="txtDuplicador4" aria-describedby="valorDuplicarHelp4" value="6">
                    <div id="valorDuplicarHelp4" class="form-text">Ingresar el valor a duplicar.</div>
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-primary" id="btnCrearPersona4">Crear</button>
                    <button type="button" class="btn btn-success" id="btnCrearPersona4A">CrearAjax</button>
                    <button type="button" class="btn btn-warning" id="btnCrearPersona4F">CrearFETCH</button>
                </div>
            </form>
        </div>


    </div>
</div>

@section scripts{
    <script>
        $(function (){

            function manejaErrorJquery(err) {
                if(err.status === 404){
                    console.log(`Resource not found - ${err.status}`);
                } else {
                    console.log(err.responseText);
                }
                console.log(err);
            }

            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            //Example 1: 
            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           

            // Add event listener to btnDuplicarJ button
            const btnDuplicarJ = document.getElementById('btnDuplicarJ');
            btnDuplicarJ.addEventListener("click", ExOneJPost, false);

            function ExOneJPost() {
                //Example 1: jQuery.post
                //www.youtube.com/watch?v=6kgYrpugYJA
                console.clear();
                console.log("Example 1 jquery");
                const url = '@Url.Action("ToDouble","Home")'
                const cantidad = document.getElementById('txtDuplicador').value;
                const data = { amountValue: cantidad };

                $.post(url, data)
                    .done(
                        function (data) {
                            //se ejecuta si la operación fue un éxito
                            console.clear();
                            console.log("successes");
                            console.log(data);
                            $("#spanDuplicado").html(data.amountDouble);
                        })
                    .fail(manejaErrorJquery)
                    .always(function () {
                        //Esta función siempre se ejecuta
                        console.log("always run");

                    });
            };

            //Ejemplo1: Con AJAX
            const btnDuplicarA = document.getElementById('btnDuplicarA');
            btnDuplicarA.addEventListener("click", ExOneAPost, false);

            function ExOneAPost() {
                //Example 1: jQuery.post
                //www.youtube.com/watch?v=6kgYrpugYJA
                console.clear();
                console.log("Example 1 ajax");
                const url = '@Url.Action("ToDoubleAjax","Home")'
                const amountValue = document.getElementById('txtDuplicador').value;
                const data = amountValue;

                $.ajax({
                    url: url,
                    data: data,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function () {
                        console.log("ANTES");
                    },
                    success: function (result) {
                        console.clear();
                        console.log(result);
                        $("#spanDuplicado").html(result.amountDouble);
                    },
                    complete: function () {
                        console.log("COMPLETE");
                    },
                    failure: function (jqXHR, textStatus, errorThrown) {
                        //alert("Status: " + jqXHR.status + "; Error: " + jqXHR.responseText); // Display error message
                    },
                    error: function () {
                        //alert('Failed to receive the Data');
                        console.log('Failed ');
                        console.log("ERROR - " + xhr.responseText);
                    }
                })
            };

            //Ejemplo1: Con FETCH
            $("#btnDuplicarF").click(function () {
                console.clear();
                console.log("ejemplo 1 FLECH");
                $("#spanDuplicado").html("");

                const url = "@Url.Action("ToDoubleAjax","Home")";
                const cantidad = $("#txtDuplicador").val();
                const data = cantidad;

                postData1(url, cantidad )
                    .then(data => {
                        console.log(data); // JSON data parsed by `data.json()` call
                        $("#spanDuplicado").html(data.amountDouble);
                    });

            });

            // Ejemplo implementando el metodo POST:
            async function postData1(url = '', data = 0) {
                console.log(data);
                // Opciones por defecto estan marcadas con un *
                const response = await fetch(url, {
                    method: 'POST', // *GET, POST, PUT, DELETE, etc.
                    mode: 'cors', // no-cors, *cors, same-origin
                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: 'same-origin', // include, *same-origin, omit
                    headers: {
                        'Content-Type': 'application/json'
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: 'follow', // manual, *follow, error
                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify(data) // body data type must match "Content-Type" header
                });
                return response.json(); // parses JSON response into native JavaScript objects
            }

            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            //Example 2:
            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

            const btnCrearPersonaJ = document.getElementById('btnCrearPersonaJ');
            btnCrearPersonaJ.addEventListener('click', ExTwoJPost, false);

            function ExTwoJPost(){
                console.clear();
                console.log("Example 2 jquery");
                const url = '@Url.Action("CreatePersonJ", "Home")';
                const name = $("#txtNombre").val();
                const age = $("#txtEdad").val();
                const data = { Name: name, Age: age };

                $.post(url, data)
                    .done(function (data) {
                        if (data.ok) {
                            console.log(`DONE - OK Mensaje:  ${data.mensaje}`);
                        } else {
                            console.log(`DONE - NO OK Mensaje: ${data.mensaje}`);
                        }
                    })
                    .fail(manejaErrorJquery)
                    .always(function () {
                        //Esta función siempre se ejecuta
                        console.log("always run");

                    });

            };

            //Ejemplo2: Con AJAX
            const btnCrearPersonaA = document.getElementById('btnCrearPersonaA');
            btnCrearPersonaA.addEventListener('click', ExTwoAPost, false);

            function ExTwoAPost() {
                console.clear();
                console.log("Example 2 ajax");
                const url = '@Url.Action("CreatePersonAjax", "Home")';
                const name = $("#txtNombre").val();
                const age = $("#txtEdad").val();
                const data = { Name: name, Age: age };

                $.ajax({
                    url: url,
                    data: JSON.stringify(data),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function () {
                        console.log("ANTES");
                    },
                    success: function (result) {
                        console.clear();
                        console.log("DONE - " + result.mensaje);
                    },
                    complete: function () {
                        console.log("COMPLETE");
                    },
                    failure: function (jqXHR, textStatus, errorThrown) {
                        //alert("Status: " + jqXHR.status + "; Error: " + jqXHR.responseText); // Display error message
                    },
                    error: function () {
                        //alert('Failed to receive the Data');
                        console.log('Failed ');
                        console.log("ERROR - " + xhr.responseText);
                    }
                })
            }

            //Ejemplo2: Con FETCH
            const btnCrearPersonaF = document.getElementById('btnCrearPersonaF');
            btnCrearPersonaF.addEventListener('click', ExTwoFPost, false);

            function ExTwoFPost() {
                console.clear();
                console.log("Example 2 fetch");
                const url = '@Url.Action("CreatePersonAjax", "Home")';
                const name = $("#txtNombre").val();
                const age = $("#txtEdad").val();
                const data = { Name: name, Age: age };

                postData2(url, data)
                    .then(data => {
                        console.log("DONE - " + data.mensaje); // JSON data parsed by `data.json()` call
                    });

            }

            // Ejemplo implementando el metodo POST:
            async function postData2(url = '', data = {}) {
                console.log(data);
                // Opciones por defecto estan marcadas con un *
                const response = await fetch(url, {
                    method: 'POST', // *GET, POST, PUT, DELETE, etc.
                    mode: 'cors', // no-cors, *cors, same-origin
                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: 'same-origin', // include, *same-origin, omit
                    headers: {
                        'Content-Type': 'application/json'
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: 'follow', // manual, *follow, error
                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify(data) // body data type must match "Content-Type" header
                });
                return response.json(); // parses JSON response into native JavaScript objects
            }

            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            //Example 3:
            //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

            $("#btnLimpiar").click(function () {
                $("#divGet").html("");
            });

            const btnCargarJ = document.getElementById('btnCargarJ');
            btnCargarJ.addEventListener('click', ExTreeJGet, false);

            function ExTreeJGet() {
                console.clear();
                console.log("Example 3 jquery");

                const url = '@Url.Action("AddPeopleListJ", "Home")';

                $("#divGet").html("");

                console.log("antes llamar a .get");

                let data = { data: "param", valnum: 5 };

                $.get(url,data)
                    .done(function (data) {
                        console.log("respuesta en .get done");
                        $("#divGet").append(data);
                    })
                    .fail(manejaErrorJquery)
                    .always(function () {
                        //Esta función siempre se ejecuta
                        console.log("respuesta en .get always");

                    });

                console.log("luego llamar a .get");
            }

            //Ejemplo3: Con AJAX
            const btnCargarA = document.getElementById('btnCargarA');
            btnCargarA.addEventListener('click', ExTreeAPost, false);

            function ExTreeAPost() {
                console.clear();
                console.log("Example 3 ajax");
                const url = '@Url.Action("AddPeopleListJ", "Home")';

                $("#divGet").html("");

                console.log("antes llamar a .get");

                let data = { data: "param", valnum: 5 };

                $.ajax({
                    url: url,
                    data: data,
                    type: 'GET',
                    contentType: 'application/json',
                    dataType: 'text',
                    beforeSend: function () {
                        console.log("ANTES");
                    },
                    success: function (result) {
                        console.log("EXITO");
                        $("#divGet").append(result);
                    },
                    complete: function () {
                        console.log("COMPLETE");
                    },
                    failure: function (jqXHR, textStatus, errorThrown) {
                        //alert("Status: " + jqXHR.status + "; Error: " + jqXHR.responseText); // Display error message
                    },
                    error: function (xhr) {
                        console.log("ERROR - " + xhr.responseText);
                        console.log(xhr);
                    }
                });

            }

            //Ejemplo3: Con FETCH
            const btnCargarF = document.getElementById('btnCargarF');
            btnCargarF.addEventListener('click', ExTreeFPost, false);

            function ExTreeFPost() {
                console.clear();
                console.log("Example 3 fetch");
                let url = '@Url.Action("AddPeopleListJ", "Home")';
                const data = { data: "param", valnum: 5 };

                url = `${url}?data=${data.data}&valnum=${data.valnum}`;

                $("#divGet").html("");

                console.log("antes llamar a .get");

                postData3(url, data)
                    .then(data => {
                        console.log("DONE " );
                        $("#divGet").append(data); // JSON data parsed by `data.json()` call
                    });

                console.log("luego llamar a .get");
            }

            // Ejemplo implementando el metodo POST:
            async function postData3(url = '', data = {}) {
                console.log(data);
                // Opciones por defecto estan marcadas con un *
                //OJO: con GET no puede enviarse body.
                const response = await fetch(url, {
                    method: 'GET', // *GET, POST, PUT, DELETE, etc.
                    mode: 'cors', // no-cors, *cors, same-origin
                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: 'same-origin', // include, *same-origin, omit
                    headers: {
                        'Content-Type': 'application/json'
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: 'follow', // manual, *follow, error
                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    //body: JSON.stringify(data) // body data type must match "Content-Type" header
                });

                console.log(response);
                return response.text();
                //return response.json(); // parses JSON response into native JavaScript objects
            }

        });
    </script>
}